@{
    ViewData["Title"] = "Home";
}

<form id="fetch-form">

</form>

<div class="" id="button-container">
    <button id="add-button">+</button>
</div>

<div class="popup" id="form-container">
    <div>
        <h3>insert new note</h3>
    </div>
    <form id="create-form">
        <input type="text" id="title" name="noteTitle" placeholder="Title">
        <input type="text" id="text" name="noteText" placeholder="Text">
        <button type="submit">add</button>
    </form>
</div>

@section Scripts
{
    <script>
        const addButton = document.getElementById('add-button');
        const formContainer = document.getElementById('form-container');
        const fetchForm = document.getElementById('fetch-form');
        const createForm = document.getElementById('create-form');

        fetch('http://localhost:5037/Home/ReadNotes')
            .then(response => {
                return response.json();
            })
            .then(data => {
                const obj = data.notes;

                for(let i = 0; i < obj.length; i++){
                    createCard(obj[i]);

                    const editBtn = document.getElementsByClassName('edit');
                    const deleteBtn = document.getElementsByClassName('delete');

                    editBtn[i].addEventListener('click', function(e){
                        e.preventDefault();

                        const noteId = document.getElementsByClassName('note-id');
                        const noteTitle = document.getElementsByClassName('note-title');
                        const noteText = document.getElementsByClassName('note-text');

                        fetch('http://localhost:5037/Home/UpdateNote', {
                            method: 'PUT',
                            headers: {
                                "Content-Type": "application/x-www-form-urlencoded",
                            },
                            body: new URLSearchParams({
                                noteId: noteId[i].value,
                                noteTitle: noteTitle[i].value,
                                noteText: noteText[i].value,
                            }),
                        })
                        .then( response => {
                            if (!response.ok) {
                                throw new Error("Errore nella risposta: " + response.statusText);
                            }

                            return response.json();
                        })
                        .then(data => {
                            removeChildrenElement(fetchForm);
                            getAllData('http://localhost:5037/Home/ReadNotes');
                        })
                    });
                    
                    deleteBtn[i].addEventListener('click', function(e){
                        e.preventDefault();

                        const noteId = document.getElementsByClassName('note-id');

                        fetch('http://localhost:5037/Home/DeleteNote', {
                            method: 'DELETE',
                            headers: {
                                "Content-Type": "application/x-www-form-urlencoded",
                            },
                            body: new URLSearchParams({
                                noteId: noteId[i].value
                            }),
                        })
                        .then( response => {
                            if (!response.ok) {
                                throw new Error("Errore nella risposta: " + response.statusText);
                            }

                            return response.json();
                        })
                        .then(data => {
                            removeChildrenElement(fetchForm);
                            getAllData('http://localhost:5037/Home/ReadNotes');
                        });
                    });
                }
            });

        formContainer.addEventListener('submit', function(e){
            e.preventDefault();

            const noteTitle = document.getElementById('title').value;
            const noteText = document.getElementById('text').value;

            fetch('http://localhost:5037/Home/CreateNote', {
                method: 'POST',
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded",
                },
                body: new URLSearchParams({
                    noteTitle: noteTitle,
                    noteText: noteText,
                }),
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Errore nella risposta: " + response.statusText);
                }

                return response.json();
            })
            .then(data => {
                removeChildrenElement(fetchForm);
                formContainer.classList.add('popup');
                createForm.reset();
                getAllData('http://localhost:5037/Home/ReadNotes');
            })
        });

        addButton.addEventListener('click', function(){
            formContainer.classList.remove('popup');
        });

        function getAllData(url){
            fetch(url)
            .then(response => {
                return response.json();
            })
            .then(data => {
                const obj = data.notes;

                obj.forEach(key => {
                    createCard(key);
                })
            });
        }

        function removeChildrenElement(dadElement) {
            let children = dadElement.childNodes;

            while (children.length > 0) {
                dadElement.removeChild(children[0]);
            }
        }

        function createCard(data){
            
            const div = document.createElement('div');
            div.className = '';

            const inputId = document.createElement('input');
            inputId.type = 'hidden';
            inputId.name = 'noteId';
            inputId.value = data.noteId;
            inputId.className = 'note-id';    

            const buttonEdit = document.createElement('button');
            buttonEdit.type = 'submit';
            buttonEdit.innerHTML = 'E';
            buttonEdit.className = 'edit';

            const buttonDelete = document.createElement('button');
            buttonDelete.type = 'submit';
            buttonDelete.innerHTML = 'D';
            buttonDelete.className = 'delete';

            const inputTitle = document.createElement('input');
            inputTitle.type = 'text';
            inputTitle.name = 'noteTitle';
            inputTitle.value = data.noteTitle;
            inputTitle.className = 'note-title';

            const inputText = document.createElement('input');
            inputText.type = 'text';
            inputText.name = 'noteText';
            inputText.value = data.noteText;
            inputText.className = 'note-text';

            div.appendChild(inputId);
            div.appendChild(inputTitle);
            div.appendChild(buttonEdit);
            div.appendChild(buttonDelete);
            div.appendChild(inputText);
            fetchForm.appendChild(div);
        }
    </script>
}